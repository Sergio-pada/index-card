{"Create new_list equal to my_list": "new_list = my_list[:]", "Define a dictionary alien_0 with 2 keys: 'color' and 'points' that have values 'green' and 5 respectively": "alien_0 = {'color': 'green', 'points': 5}", "Tupple": "A faster, immutable list", "What is log base 10 of 100?": "2\nThis is like asking 'How many 10s should be multiplied to get 100?'", "Loop though each key and value in my_dict, printing them next to eachother": "Current Value: for my_key, my_val in my_dict.items():\n        print(my_key + \": \" + my_val)\n# Note that we can also use keys() or values() instead of items()", "Given the following code, what is the value of var?\nalien_0 = {'color': 'green'}\nvar = alien_0.pop('color')": "green", "Using range(), print out numbers 1-5": "for num in range(1, 6):\n\tprint(num)", "Given dictionary alien_0, print value associated with key 'color'": "print(alien_0['color'])", "What is the most modern and efficient way to perform string interpolation?": "f strings\nEx: print(f'Hello {name}')", "Add all nums in my_nums and store in variable total": "total = sum(my_nums)", "Loop through each name in list names, printing each": "for name in names:\n\tprint(name)", "Remove element 'Sergio' from my_list": "my_list.remove('Sergio')", "Time complexity for finding optimal route in the traveling salesman problem": "n!\nFor example, 5 stops: 5 choices, followed by 4, followed by 3, and so on", "Time complexity of binary search.": "O(log n)", "Whats a benifit of using a main() function instead of just writing the code that you want to run?": "\u2022 Readability: This shows the reader where execution starts,\n\u2022 Reusability: For example, when testing, we can run this without running entire script\n\u2022 Prevention of code execution on import: A user imports this code, it doesnt run automatically. Has to be called"}